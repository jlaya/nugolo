<?php
defined('BASEPATH') OR exit('No direct script access allowed');

// Se incluye la libreria de Epayco
include APPPATH . 'vendor/autoload.php';

class User extends CI_Controller {

    public function __construct()
    {
        parent::__construct();
        // Your own constructor code
        $this->load->database();
        $this->load->model('Announce_model');
        $this->load->library('session');
        
        /*cache control*/
        //$this->output->set_header('Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0');
        //$this->output->set_header('Pragma: no-cache');
    }

    function getRealIP()
    {

        if (isset($_SERVER["HTTP_CLIENT_IP"]))
        {
            return $_SERVER["HTTP_CLIENT_IP"];
        }
        elseif (isset($_SERVER["HTTP_X_FORWARDED_FOR"]))
        {
            return $_SERVER["HTTP_X_FORWARDED_FOR"];
        }
        elseif (isset($_SERVER["HTTP_X_FORWARDED"]))
        {
            return $_SERVER["HTTP_X_FORWARDED"];
        }
        elseif (isset($_SERVER["HTTP_FORWARDED_FOR"]))
        {
            return $_SERVER["HTTP_FORWARDED_FOR"];
        }
        elseif (isset($_SERVER["HTTP_FORWARDED"]))
        {
            return $_SERVER["HTTP_FORWARDED"];
        }
        else
        {
            return $_SERVER["REMOTE_ADDR"];
        }

    }

    public function register_public() {

        $data['ref_payco'] = $this->input->get('ref_payco');
        $data['category'] = $this->user_model->get_category();
        $this->load->view('frontend/landingpage/index-public', $data);
    }

    public function register_private() {

        //$data['ref_payco'] = $this->input->get('ref_payco');
        $data['category'] = $this->user_model->get_category();
        $this->load->view('frontend/landingpage/index-private', $data);
    }

    public function index() {

        if( $this->session->userdata('user_id') ){
            $page_data['page_name'] = "home";
            $page_data['announce']  = $this->Announce_model->show_public();
        }else{
            $page_data['page_name'] = "home-landingpage";
        }
        $page_data['page_title'] = get_phrase('home');
        $this->load->view('frontend/default/index-landigpage', $page_data);
    }

    public function ajax_sub_category() {
        $id = $this->input->post('id');
        $result = $this->user_model->ajax_sub_category( $id );
        echo json_encode( $result );
    }

    public function register() {
        
        //$SECRET_KEY = '6LfwdMUZAAAAAH6nWk0FiN0BisBtxgv4oyM_HKjD';
        //print_r($this->input->post()); exit;
        //$data['recaptcha_token'] = html_escape($this->input->post('g-recaptcha-response'));
        //$data['recaptcha_token'] = '123456';
        //$googleToken = $data['recaptcha_token'];
        //$response = file_get_contents("https://www.google.com/recaptcha/api/siteverify?secret=".$SECRET_KEY."&response={$googleToken}");
        //$response = json_decode($response);
        //$response = (array) $response;
        //print_r($response); exit;
        //if( $response['success'] == 1 )
        //{
           $data['first_name'] = html_escape($this->input->post('first_name'));
            $data['last_name']  = html_escape($this->input->post('last_name'));
            $data['email']  = html_escape($this->input->post('email'));
            $data['password']  = sha1($this->input->post('password'));

            $verification_code =  md5(rand(100000000, 200000000));
            $data['verification_code'] = $verification_code;
            //$data['status'] = 1;
            if( $this->input->post('pay') == 1 ){
                $data['status'] = 1;
            }else{
                $data['status'] = 0;
            }
            $data['wishlist'] = json_encode(array());
            $data['watch_history'] = json_encode(array());
            $data['date_added'] = strtotime(date("Y-m-d H:i:s"));
            $social_links = array(
                'facebook' => "",
                'twitter'  => "",
                'linkedin' => ""
            );
            $data['social_links'] = json_encode($social_links);
            $data['role_id']  = 2;

            // Add paypal keys
            $paypal_info = array();
            $paypal['production_client_id'] = "";
            array_push($paypal_info, $paypal);
            $data['paypal_keys'] = json_encode($paypal_info);
            // Add Stripe keys
            $stripe_info = array();
            $stripe_keys = array(
                'public_live_key' => "",
                'secret_live_key' => ""
            );
            array_push($stripe_info, $stripe_keys);
            $data['stripe_keys'] = json_encode($stripe_info);

            $validity = $this->user_model->check_duplication('on_create', $data['email']);
            if ($validity) {
                $user_id = $this->user_model->register_user($data);
                //echo $this->db->last_query();

                // Ingreso de detalles de valoracion
                $detail_u['user_id']         = $user_id;
                $detail_u['gender']          = $this->input->post('gender');
                $detail_u['age']             = $this->input->post('age');
                $detail_u['contact']         = $this->input->post('contact');
                $detail_u['weighing']        = $this->input->post('weighing');
                $detail_u['stature']         = $this->input->post('stature');
                $detail_u['type_activity']   = $this->input->post('type_activity');
                $detail_u['frequency']       = $this->input->post('frequency');
                $detail_u['schedule']        = $this->input->post('schedule');
                $detail_u['phone']           = $this->input->post('phone');
                $detail_u['category_id']     = $this->input->post('category_id');
                $detail_u['pathology']       = $this->input->post('pathology');
                $detail_u['city']            = $this->input->post('city');
                $detail_u['address']         = $this->input->post('address');
                $detail_u['pay']             = $this->input->post('pay');
                $detail_u['ref_payco']       = $this->input->post('ref_payco');
                //$detail_u['doc_number']      = $this->input->post('doc_number');
                

                if($user_id){
                    $this->session->set_flashdata('flash_message', 'Se ha registrado con exito');

                    if( $detail_u['pay'] == 1 ){
                        //$detail_u['response'] = json_encode($pse);
                    }

                }
                
                $this->user_model->register_user_detail($detail_u);

                // set array of items in session
                $arraydata = array(
                        'client_id'  => $user_id
                );
                $this->session->set_userdata($arraydata);

                //echo $this->db->last_query();
                /*$this->session->set_userdata('user_login', '1');
                $this->session->set_userdata('user_id', $user_id);
                $this->session->set_userdata('role_id', 2);
                $this->session->set_userdata('role', get_user_role('user_role', 2));
                $this->session->set_userdata('name', $data['first_name'].' '.$data['last_name']);*/
                $ma=$this->email_model->send_email_verification_mail($data['email'], $verification_code);
                // echo $this->email->print_debugger();
                if($ma){
                    
                $this->session->set_flashdata('flash_message', 'Se envio un correo a su bandeja de entrada');
                    
                }
            }else {
                $this->session->set_flashdata('error_message', get_phrase('email_duplication'));
            }
        //}

        
        redirect(site_url('registro'), 'refresh');
    }

    public function registers_private() {
        
        //$SECRET_KEY = '6LfwdMUZAAAAAH6nWk0FiN0BisBtxgv4oyM_HKjD';
        //print_r($this->input->post()); exit;
        //$data['recaptcha_token'] = html_escape($this->input->post('g-recaptcha-response'));
        //$data['recaptcha_token'] = '123456';
        //$googleToken = $data['recaptcha_token'];
        //$response = file_get_contents("https://www.google.com/recaptcha/api/siteverify?secret=".$SECRET_KEY."&response={$googleToken}");
        //$response = json_decode($response);
        //$response = (array) $response;
        //print_r($response); exit;
        //if( $response['success'] == 1 )
        //{
           $data['first_name'] = html_escape($this->input->post('first_name'));
            $data['last_name']  = html_escape($this->input->post('last_name'));
            $data['email']  = html_escape($this->input->post('email'));
            $data['password']  = sha1($this->input->post('password'));

            $verification_code =  md5(rand(100000000, 200000000));
            $data['verification_code'] = $verification_code;
            $data['status'] = 1;
            $data['wishlist'] = json_encode(array());
            $data['watch_history'] = json_encode(array());
            $data['date_added'] = strtotime(date("Y-m-d H:i:s"));
            $social_links = array(
                'facebook' => "",
                'twitter'  => "",
                'linkedin' => ""
            );
            $data['social_links'] = json_encode($social_links);
            $data['role_id']  = 2;

            // Add paypal keys
            $paypal_info = array();
            $paypal['production_client_id'] = "";
            array_push($paypal_info, $paypal);
            $data['paypal_keys'] = json_encode($paypal_info);
            // Add Stripe keys
            $stripe_info = array();
            $stripe_keys = array(
                'public_live_key' => "",
                'secret_live_key' => ""
            );
            array_push($stripe_info, $stripe_keys);
            $data['stripe_keys'] = json_encode($stripe_info);

            $validity = $this->user_model->check_duplication('on_create', $data['email']);
            if ($validity) {
                $user_id = $this->user_model->register_user($data);
                //echo $this->db->last_query();

                // Ingreso de detalles de valoracion
                $detail_u['user_id']         = $user_id;
                $detail_u['gender']          = $this->input->post('gender');
                $detail_u['age']             = $this->input->post('age');
                $detail_u['contact']         = $this->input->post('contact');
                $detail_u['weighing']        = $this->input->post('weighing');
                $detail_u['stature']         = $this->input->post('stature');
                $detail_u['type_activity']   = $this->input->post('type_activity');
                $detail_u['frequency']       = $this->input->post('frequency');
                $detail_u['schedule']        = $this->input->post('schedule');
                $detail_u['phone']           = $this->input->post('phone');
                $detail_u['category_id']     = $this->input->post('category_id');
                $detail_u['pathology']       = $this->input->post('pathology');
                $detail_u['city']            = $this->input->post('city');
                $detail_u['address']         = $this->input->post('address');
                $detail_u['pay']             = $this->input->post('pay');
                $detail_u['ref_payco']       = $this->input->post('ref_payco');
                //$detail_u['doc_number']      = $this->input->post('doc_number');
                

                if($user_id){
                    $this->session->set_flashdata('flash_message', 'Se ha registrado con exito');

                    if( $detail_u['pay'] == 1 ){
                        //$detail_u['response'] = json_encode($pse);
                    }

                }
                
                $this->user_model->register_user_detail($detail_u);

                // set array of items in session
                $arraydata = array(
                        'client_id'  => $user_id
                );
                $this->session->set_userdata($arraydata);

                //echo $this->db->last_query();
                /*$this->session->set_userdata('user_login', '1');
                $this->session->set_userdata('user_id', $user_id);
                $this->session->set_userdata('role_id', 2);
                $this->session->set_userdata('role', get_user_role('user_role', 2));
                $this->session->set_userdata('name', $data['first_name'].' '.$data['last_name']);*/
                $ma=$this->email_model->send_email_verification_mail($data['email'], $verification_code);
                // echo $this->email->print_debugger();
                if($ma){
                    
                $this->session->set_flashdata('flash_message', 'Se envio un correo a su bandeja de entrada');
                    
                }
            }else {
                $this->session->set_flashdata('error_message', get_phrase('email_duplication'));
            }
        //}

        
        redirect(site_url('register_private'), 'refresh');
    }

    public function preview_users() {

        $this->load->library('session');

        $data = $this->input->post();

        $this->session->set_userdata( 'users', $data );

    }

    public function register_preview_users() {

        $forms         = $this->session->userdata['users'];
        $first_name    = $forms['first_name'];
        $last_name     = $forms['last_name'];
        $email         = $forms['email'];
        $phone         = $forms['phone'];
        $password      = $forms['password'];
        $gender        = $forms['gender'];
        $age           = $forms['age'];
        $contact       = $forms['contact'];
        $weighing      = $forms['weighing'];
        $stature       = $forms['stature'];
        $type_activity = $forms['type_activity'];
        $frequency     = $forms['frequency'];
        $schedule      = $forms['schedule'];
        $category_id   = $forms['category_id'];
        $pathology     = $forms['pathology'];
        $pay           = $forms['pay'];


        $data['first_name'] = html_escape($first_name);
        $data['last_name']  = html_escape($last_name);
        $data['email']  = html_escape($email);
        $data['password']  = sha1($password);

        $verification_code =  md5(rand(100000000, 200000000));
        $data['verification_code'] = $verification_code;
        $data['status'] = 0;
        $data['wishlist'] = json_encode(array());
        $data['watch_history'] = json_encode(array());
        $data['date_added'] = strtotime(date("Y-m-d H:i:s"));
        $social_links = array(
            'facebook' => "",
            'twitter'  => "",
            'linkedin' => ""
        );
        $data['social_links'] = json_encode($social_links);
        $data['role_id']  = 2;

        // Add paypal keys
        $paypal_info = array();
        $paypal['production_client_id'] = "";
        array_push($paypal_info, $paypal);
        $data['paypal_keys'] = json_encode($paypal_info);
        // Add Stripe keys
        $stripe_info = array();
        $stripe_keys = array(
            'public_live_key' => "",
            'secret_live_key' => ""
        );
        array_push($stripe_info, $stripe_keys);
        $data['stripe_keys'] = json_encode($stripe_info);

        $validity = $this->user_model->check_duplication('on_create', $email);
        if ($validity) {
            $user_id = $this->user_model->register_user($data);

            // Ingreso de detalles de valoracion
            $detail_u['user_id']         = $user_id;
            $detail_u['gender']          = $gender;
            $detail_u['age']             = $age;
            $detail_u['contact']         = $contact;
            $detail_u['weighing']        = $weighing;
            $detail_u['stature']         = $stature;
            $detail_u['type_activity']   = $type_activity;
            $detail_u['frequency']       = $frequency;
            $detail_u['schedule']        = $schedule;
            $detail_u['phone']           = $phone;
            $detail_u['category_id']     = $category_id;
            $detail_u['pathology']       = $pathology;
            $detail_u['pay']             = $pay;
            $detail_u['state']           = 1;
            $detail_u['ref_payco']       = $this->input->post('ref_payco');
            $this->user_model->register_user_detail($detail_u);

            if($user_id){
                $this->session->set_flashdata('flash_message', 'Se ha registrado con exito');
            }

            /*$this->session->set_userdata('user_login', '1');
            $this->session->set_userdata('user_id', $user_id);
            $this->session->set_userdata('role_id', 2);
            $this->session->set_userdata('role', get_user_role('user_role', 2));
            $this->session->set_userdata('name', $data['first_name'].' '.$data['last_name']);*/
            $ma=$this->email_model->send_email_verification_mail($email, $verification_code);
            // echo $this->email->print_debugger();
            if($ma){
                
            $this->session->set_flashdata('flash_message', 'Se envio un correo a su bandeja de entrada');
                
            }
        }else {
            $this->session->set_flashdata('error_message', get_phrase('email_duplication'));
        }
        
        // Se destruye los datos en sesion
        $this->session->unset_userdata('users');
        //redirect(site_url('/'), 'refresh');
    }

}
